module.exports.config = {
  name: "truthordare",
  version: "1.2.0",
  hasPermssion: 0,
  credits: "rX Abdullah + ChatGPT",
  description: "Play truth or dare with reply judgment",
  commandCategory: "fun",
  usages: "",
  cooldowns: 5,
};

module.exports.run = async function({ api, event, Users }) {
  const { threadID, messageID, senderID } = event;
  const name = await Users.getNameUser(senderID);

  const countdown = [
    { text: "тП│ 3...", delay: 1000 },
    { text: "тП│ 2...", delay: 2000 },
    { text: "тП│ 1...", delay: 3000 },
    { text: "ЁЯОЙ Ready!", delay: 4000 }
  ];

  for (const step of countdown) {
    setTimeout(() => {
      api.sendMessage(step.text, threadID);
    }, step.delay);
  }

  setTimeout(() => {
    const type = Math.random() < 0.5 ? "truth" : "dare";

    const truths = [
      "тЭУ Have you ever lied to get out of trouble? | рждрзБржорж┐ ржХрж┐ ржХрзЛржирзЛ ржЭрж╛ржорзЗрж▓рж╛ ржерзЗржХрзЗ ржмрзЗрж░ рж╣рждрзЗ ржорж┐ржерзНржпрж╛ ржмрж▓рзЗржЫрзЛ?",
      "тЭУ Do you have a secret crush? | рждрзЛржорж╛рж░ ржХрж┐ ржЧрзЛржкржи ржХрзНрж░рж╛рж╢ ржЖржЫрзЗ?",
      "тЭУ Have you ever cheated in an exam? | рждрзБржорж┐ ржХрж┐ ржХржЦржирзЛ ржкрж░рзАржХрзНрж╖рж╛ржпрж╝ ржиржХрж▓ ржХрж░рзЗржЫрзЛ?",
      "тЭУ Have you ever stolen something? | рждрзБржорж┐ ржХрж┐ ржХржЦржирзЛ ржХрж┐ржЫрзБ ржЪрзБрж░рж┐ ржХрж░рзЗржЫрзЛ?",
      "тЭУ Who was your first love? | рждрзЛржорж╛рж░ ржкрзНрж░ржержо ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржХрзЗ ржЫрж┐рж▓?"
    ];

    const dares = [
      "ЁЯФе Call someone right now and say 'I love you' | ржПржЦржиржЗ ржХрж╛ржЙржХрзЗ ржХрж▓ ржХрж░рзЗ ржмрж▓рзЛ 'ржЖржЗ рж▓рж╛ржн ржЗржЙ'!",
      "ЁЯФе Send a funny selfie in the group | ржЧрзНрж░рзБржкрзЗ ржоржЬрж╛рж░ рж╕рзЗрж▓ржлрж┐ ржкрж╛ржарж╛ржУ!",
      "ЁЯФе Sing your favorite song and send a voice message | рждрзЛржорж╛рж░ ржкрзНрж░рж┐ржпрж╝ ржЧрж╛ржиржЯрж┐ ржЧрзЗржпрж╝рзЗ ржнржпрж╝рзЗрж╕ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржУ!",
      "ЁЯФе Type 'I am the cutest here' in the group | ржЧрзНрж░рзБржкрзЗ рж▓рж┐ржЦрзЛ 'ржЖржорж┐ ржПржЦрж╛ржирзЗ рж╕ржмржЪрзЗржпрж╝рзЗ ржХрж┐ржЙржЯ!'",
      "ЁЯФе Share the last photo you took | рждрзЛржорж╛рж░ рждрзЛрж▓рж╛ рж╢рзЗрж╖ ржЫржмрж┐ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзЛ!"
    ];

    const question = type === "truth"
      ? truths[Math.floor(Math.random() * truths.length)]
      : dares[Math.floor(Math.random() * dares.length)];

    const msg = `${type === "truth" ? "ЁЯЯв ЁЭЧзЁЭЧеЁЭЧиЁЭЧзЁЭЧЫ ЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ" : "ЁЯФ┤ ЁЭЧЧЁЭЧФЁЭЧеЁЭЧШ ЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ"}\n` +
      `тЮд ${name}, ${type === "truth" ? "answer this" : "do this dare"}:\n` +
      `${question}\n\nЁЯТм Reply to this message with your ${type === "truth" ? "answer" : "proof"}.`;

    api.sendMessage(msg, threadID, (err, info) => {
      global.client.handleReply.push({
        name: module.exports.config.name,
        messageID: info.messageID,
        author: senderID,
        authorName: name
      });
    }, messageID);
  }, 5000);
};

module.exports.handleReply = async function({ api, event, handleReply }) {
  const { threadID, messageID, senderID, body } = event;

  if (senderID !== handleReply.author) {
    return api.sendMessage("ЁЯЪл Only the player who got the question can answer!", threadID, messageID);
  }

  const answer = body.toLowerCase();
  let quoteEN = "", quoteBN = "", type = "";

  const positiveWords = ["yes", "i did", "sure", "of course", "рж╣рзНржпрж╛ржБ", "рж╣рзНржпрж╛", "done", "complete", "ok"];
  const negativeWords = ["no", "never", "nai", "ржирж╛", "can't", "cannot", "nope"];

  if (positiveWords.some(word => answer.includes(word))) {
    type = "good";
    const quotes = [
      { en: "Honesty is the best policy.", bn: "рж╕рждрждрж╛ рж╢рзНрж░рзЗрж╖рзНржа ржЧрзБржгред" },
      { en: "YouтАЩre brave to face the truth.", bn: "рждрзБржорж┐ рж╕рждрзНржпрзЗрж░ ржорзБржЦрзЛржорзБржЦрж┐ рж╣рждрзЗ рж╕рж╛рж╣рж╕рзАред" },
      { en: "Nice! You did it.", bn: "ржжрж╛рж░рзБржи! рждрзБржорж┐ ржХрж░рзЗ ржжрзЗржЦрж┐ржпрж╝рзЗржЫрзЛред" }
    ];
    const picked = quotes[Math.floor(Math.random() * quotes.length)];
    quoteEN = picked.en;
    quoteBN = picked.bn;
  } else if (negativeWords.some(word => answer.includes(word))) {
    type = "bad";
    const quotes = [
      { en: "The truth can hurt, but it heals.", bn: "рж╕рждрзНржп ржХрж╖рзНржЯ ржжрж┐рждрзЗ ржкрж╛рж░рзЗ, ржХрж┐ржирзНрждрзБ ржПржЯрж┐ ржирж┐рж░рж╛ржоржпрж╝ ржХрж░рзЗред" },
      { en: "Next time, try to open up!", bn: "ржкрж░рзЗрж░ ржмрж╛рж░ ржПржХржЯрзБ ржЦрзЛрж▓рж╛ржорзЗрж▓рж╛ рж╣ржУржпрж╝рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ!" },
      { en: "ItтАЩs okay. We all hesitate sometimes.", bn: "ржарж┐ржХ ржЖржЫрзЗред ржорж╛ржЭрзЗ ржорж╛ржЭрзЗ рж╕ржмрж╛ржЗ ржжрзНржмрж┐ржзрж╛ржпрж╝ ржкржбрж╝рзЗред" }
    ];
    const picked = quotes[Math.floor(Math.random() * quotes.length)];
    quoteEN = picked.en;
    quoteBN = picked.bn;
  } else {
    type = "neutral";
    quoteEN = "Interesting answer!";
    quoteBN = "ржоржЬрж╛рж░ ржЙрждрзНрждрж░!";
  }

  const title = type === "good"
    ? "тЬЕ ЁЭРЖЁЭРОЁЭРОЁЭРГ ЁЭРАЁЭРНЁЭРТЁЭРЦЁЭРДЁЭРС"
    : type === "bad"
    ? "тЭМ ЁЭРБЁЭРАЁЭРГ ЁЭРАЁЭРНЁЭРТЁЭРЦЁЭРДЁЭРС"
    : "тД╣я╕П ЁЭРАЁЭРНЁЭРТЁЭРЦЁЭРДЁЭРС ЁЭРСЁЭРДЁЭРВЁЭРДЁЭРИЁЭРХЁЭРДЁЭРГ";

  const msg = `${title}\n` +
    `тЮд ${handleReply.authorName}\n` +
    `ЁЯТм "${quoteEN}"\n` +
    `ЁЯТм "${quoteBN}"`;

  return api.sendMessage(msg, threadID, messageID);
};
