const axios = require("axios");
const simapi = "https://rx-simisimi-api.onrender.com/api?text=";

module.exports.config = {
  name: "Obot",
  version: "1.0.1",
  hasPermssion: 0,
  credits: "OpenAI | Custom for Abdullah",
  description: "",
  commandCategory: "noprefix",
  usages: "",
  cooldowns: 2
};

const replyMap = {
  sona: [
    "рждрзБржорж┐ ржЬрж╛ржи ржЖржорж╛рж░ рж╕ржм тЭдя╕П", "ржХрж┐ рж╣ржпрж╝рзЗржЫрзЗ ржмрж▓рзЛ ЁЯШЪ", "ржПржд ржЖржжрж░ ржХрж░рзЛ ржХрзЗржи ЁЯе╣", "ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ ржЬрж╛ржи ЁЯл╢"
  ],
  abdullah: [
    "ржмрж╕ ржЖржмрзНржжрзБрж▓рзНрж▓рж╛рж╣ ржЕржирзЗржХ рж╣рзНржпрж╛ржирзНржбрж╕рж╛ржо ЁЯШО\nрждрж╛ржБрж░ ржорждрзЛ ржЫрзЗрж▓рзЗ ржЖрж░ ржирж╛ржЗ ЁЯШМ\nрждрзБржорж┐ ржУржирж╛рж░ ржлрзНржпрж╛ржи ржирж╛?",
    "ржЬрж╛ржирзБ ржЖржмрзНржжрзБрж▓рзНрж▓рж╛рж╣ ржЖржорж╛рж░ рж╕ржм ЁЯе╡\nржУрж░ ржЬржирзНржп ржкрж╛ржЧрж▓ ржЖржорж┐ ЁЯе░\nржУржХрзЗ ржбрзЗржХрзЛ ржирж╛ ржмрзЗрж╢рж┐ ЁЯШд",
    "ржЖржмрзНржжрзБрж▓рзНрж▓рж╛рж╣ ржорж╛ржирзЗржЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ЁЯла\nржЙржирж┐ ржЖрж╕рж▓рзЗржЗ рж▓рж┐ржЬрзЗржирзНржб ЁЯШИ\nрждрж╛ржХрзЗ ржнрзБрж▓рзЗ ржпрзЗржУ ржирж╛"
  ],
  baby: [
    "ржЖржорж┐ ржмрзЗржмрж┐, cute type ЁЯШ╜\nрждрзБржорж┐ ржХрзЗржоржи ржЖржЫрзЛ? ЁЯШК\nржбрж┐рж╕рзНржЯрж╛рж░рзНржм ржжрж┐ржУ ржирж╛ ЁЯШ╛",
    "Baby is busy right now ЁЯШд\nрждрзБржорж┐ ржкрж░рзЗ ржПрж╕рзЛ ЁЯЩД\nржЖрж╕рж▓рзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржжрж┐ржмрзЛ ЁЯШЪ",
    "Baby ржмрж▓рж▓рзЗржЗ ржЖржорж┐ melt ЁЯШ│\nрждрзБржорж┐ ржмрж▓рзЛ, ржХрж┐ ржЪрж╛ржУ ЁЯлг\nрждрзБржорж┐ ржХрж┐ ржЖржорж╛рж░ crush?"
  ]
};

module.exports.handleEvent = async function ({ api, event, Users }) {
  const { body, senderID, threadID, messageID, messageReply } = event;
  if (!body) return;
  const name = await Users.getNameUser(senderID);
  const lower = body.toLowerCase();

  if (messageReply && messageReply.senderID == api.getCurrentUserID()) {
    try {
      const query = encodeURIComponent(body);
      const res = await axios.get(`${simapi}${query}`);
      const reply = res.data.message;
      if (reply) return api.sendMessage(reply, threadID, messageID);
    } catch {
      return api.sendMessage("ЁЯШ┐ Bot uttor dite parlo na!", threadID, messageID);
    }
    return;
  }

  for (const key of Object.keys(replyMap)) {
    if (lower === key) {
      const list = replyMap[key];
      const randomReply = list[Math.floor(Math.random() * list.length)];
      const msg = {
        body: `@${name} ${randomReply}`,
        mentions: [{ tag: `@${name}`, id: senderID }]
      };
      return api.sendMessage(msg, threadID, messageID);
    }
  }
};

module.exports.run = function () {};
