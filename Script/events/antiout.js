const fs = global.nodemodule["fs-extra"];

module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "1.0.1",
  hasPermssion: 1,
  credits: "Modified by rX Abdullah",
  description: "Auto add back when someone leaves & toggle on/off",
  usages: "[on/off]",
  commandCategory: "group",
  cooldowns: 5
};

// ========== EVENT SYSTEM ==========
module.exports.handleEvent = async ({ event, api, Threads, Users }) => {
  let data = (await Threads.getData(event.threadID)).data || {};

  // Antiout ‡¶¨‡¶®‡ßç‡¶ß ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ
  if (data.antiout !== true) return;

  // ‡¶Ø‡¶¶‡¶ø ‡¶¨‡¶ü ‡¶®‡¶ø‡¶ú‡ßá ‡¶≤‡¶ø‡¶≠ ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ
  if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;

  const name = global.data.userName.get(event.logMessageData.leftParticipantFbId) || await Users.getNameUser(event.logMessageData.leftParticipantFbId);
  const type = (event.author == event.logMessageData.leftParticipantFbId) ? "self-separation" : "kicked";

  if (type == "self-separation") {
    api.addUserToGroup(event.logMessageData.leftParticipantFbId, event.threadID, (error) => {
      if (error) {
        api.sendMessage(`‚ùå ‡¶∏‡¶∞‡¶ø ‡¶¨‡¶∏, ${name} ‡¶è‡¶á ‡¶Ü‡¶¨‡¶æ‡¶≤‡¶ü‡¶æ‡¶∞‡ßá ‡¶è‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ‡•§ ‡¶π‡¶Ø‡¶º ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡¶õ‡ßá, ‡¶®‡¶æ ‡¶π‡¶Ø‡¶º ‡¶Æ‡ßá‡¶∏‡ßá‡¶û‡ßç‡¶ú‡¶æ‡¶∞ ‡¶®‡¶æ‡¶á‡•§\n\n‚ú¶ rX Chatbot | ‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤‡ßç‡¶≤‡¶æ‡¶π`, event.threadID);
      } else {
        api.sendMessage(`üòí ‡¶∂‡ßã‡¶®, ${name} ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶π‡¶á‡¶≤‡ßã ‡¶ó‡ßç‡¶Ø‡¶æ‡¶Ç!\nüëâ ‡¶è‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶≤‡¶æ‡¶ó‡ßá!\nüòé ‡¶§‡ßÅ‡¶á ‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶≤‡¶ø‡¶≠ ‡¶®‡¶ø‡¶õ‡ßã‡¶∏ ‚Äì ‡¶§‡ßã‡¶ï‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ü‡ßá‡¶®‡ßá ‡¶Ü‡¶®‡¶≤‡¶æ‡¶Æ!\n\n‚ú¶ rX Chatbot | ‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤‡ßç‡¶≤‡¶æ‡¶π`, event.threadID);
      }
    });
  }
};

// ========== COMMAND SYSTEM ==========
module.exports.run = async ({ api, event, args, Threads }) => {
  const threadData = await Threads.getData(event.threadID);
  let data = threadData.data || {};

  if (args[0] == "on") {
    data.antiout = true;
    await Threads.setData(event.threadID, { data });
    return api.sendMessage("‚úÖ Antiout ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!\n‡¶ï‡ßá‡¶â ‡¶®‡¶ø‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶π‡¶≤‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶è‡¶° ‡¶π‡¶¨‡ßá‡•§", event.threadID);
  }

  if (args[0] == "off") {
    data.antiout = false;
    await Threads.setData(event.threadID, { data });
    return api.sendMessage("‚ùå Antiout ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!\n‡¶è‡¶ñ‡¶® ‡¶ï‡ßá‡¶â ‡¶¨‡ßá‡¶∞ ‡¶π‡¶≤‡ßá ‡¶Ü‡¶∞ ‡¶è‡¶° ‡¶π‡¶¨‡ßá ‡¶®‡¶æ‡•§", event.threadID);
  }

  return api.sendMessage("üìå ‡¶∏‡¶†‡¶ø‡¶ï ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞:\nantiout on ‚û§ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá\nantiout off ‚û§ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶§‡ßá", event.threadID);
};
